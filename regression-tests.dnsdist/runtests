#!/usr/bin/env bash
set -e

PYTHON=${PYTHON:-python2}

if [ ! -d .venv ]; then
	virtualenv -p ${PYTHON} .venv
fi
. .venv/bin/activate
python -V
pip install -r requirements.txt
protoc -I=../pdns/ --python_out=. ../pdns/dnsmessage.proto
protoc -I=../pdns/ --python_out=. ../pdns/dnstap.proto

if [ -z "${DNSDISTBIN}" ]; then
    DNSDISTBIN=$(ls ../pdns/dnsdistdist/dnsdist-*/dnsdist)
fi
export DNSDISTBIN

set -e
if [ "${PDNS_DEBUG}" = "YES" ]; then
  set -x
fi

# Generate a new CA
openssl req -new -x509 -days 1 -extensions v3_ca -keyout ca.key -out ca.pem -nodes -config configCA.conf
# Generate a new server certificate request
openssl req -new -newkey rsa:2048 -nodes -keyout server.key -out server.csr -config configServer.conf
# Sign the server cert
openssl x509 -req -days 1 -CA ca.pem -CAkey ca.key -CAcreateserial -in server.csr -out server.pem
# Generate a chain
cat server.pem ca.pem >> server.chain

nosetests --with-xunit $@

rm ca.key ca.pem ca.srl server.csr server.key server.pem server.chain
